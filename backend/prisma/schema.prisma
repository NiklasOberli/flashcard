// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String      @id @default(uuid())
  email               String      @unique
  passwordHash        String      @map("password_hash")
  emailVerified       Boolean     @default(false) @map("email_verified")
  verificationToken   String?     @unique @map("verification_token")
  resetToken          String?     @unique @map("reset_token")
  resetTokenExpiry    DateTime?   @map("reset_token_expiry")
  createdAt           DateTime    @default(now()) @map("created_at")
  updatedAt           DateTime    @updatedAt @map("updated_at")
  
  folders             Folder[]
  flashcards          Flashcard[]

  @@map("users")
}

model Folder {
  id        String      @id @default(uuid())
  userId    String      @map("user_id")
  name      String
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  flashcards Flashcard[]

  @@map("folders")
}

model Flashcard {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  folderId  String   @map("folder_id")
  frontText String   @map("front_text")
  backText  String   @map("back_text")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  folder Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)

  @@map("flashcards")
}
